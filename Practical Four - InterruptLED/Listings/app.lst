


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
    5 00000000 E0028004 
                       IO0SET  EQU              0xE0028004
    6 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
    7 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    8 00000000 E0008000 
                       T1      equ              0xE0008000
    9 00000000         
   10 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
   11 00000000 00000004 
                       TCR     equ              4
   12 00000000 00000014 
                       MCR     equ              0x14
   13 00000000 00000018 
                       MR0     equ              0x18
   14 00000000         
   15 00000000 00000002 
                       TimerCommandReset
                               equ              2
   16 00000000 00000001 
                       TimerCommandRun
                               equ              1
   17 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   18 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   19 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   20 00000000         
   21 00000000         ; VIC Stuff -- UM, Table 41
   22 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   23 00000000 00000010 
                       IntEnable
                               equ              0x10
   24 00000000 00000030 
                       VectAddr
                               equ              0x30
   25 00000000 00000100 
                       VectAddr0
                               equ              0x100
   26 00000000 00000200 
                       VectCtrl0
                               equ              0x200



ARM Macro Assembler    Page 2 


   27 00000000         
   28 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   29 00000000 00000010 
                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   30 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   31 00000000         
   32 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   33 00000000                 IMPORT           main
   34 00000000         
   35 00000000         ; (c) Mike Brady, 2014 -- 2019.
   36 00000000         
   37 00000000                 EXPORT           start
   38 00000000         start
   39 00000000         ; initialisation code
   40 00000000         
   41 00000000         ; Initialise the VIC
   42 00000000 E59F014C        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   43 00000004         
   44 00000004 E59F114C        ldr              r1,=irqhan
   45 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   46 0000000C         
   47 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   48 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   49 00000014         
   50 00000014 E3A01010        mov              r1,#Timer0Mask
   51 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   52 0000001C         
   53 0000001C E3A01000        mov              r1,#0
   54 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   55 00000024         
   56 00000024         ; Initialise Timer 0
   57 00000024 E59F0130        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   58 00000028         
   59 00000028 E3A01002        mov              r1,#TimerCommandReset
   60 0000002C E5801004        str              r1,[r0,#TCR]
   61 00000030         
   62 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   63 00000034 E5801000        str              r1,[r0,#IR]



ARM Macro Assembler    Page 3 


   64 00000038         
   65 00000038         ;ldr r1,=(14745600/200)-1  ; 5 ms = 1/200 second
   66 00000038 E59F1120        ldr              r1,=(14745600/1600)-1 ; 625 ms 
                                                            = 1/1600 second
   67 0000003C E5801018        str              r1,[r0,#MR0]
   68 00000040         
   69 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   70 00000044 E5801014        str              r1,[r0,#MCR]
   71 00000048         
   72 00000048 E3A01001        mov              r1,#TimerCommandRun
   73 0000004C E5801004        str              r1,[r0,#TCR]
   74 00000050         
   75 00000050         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   76 00000050         
   77 00000050         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   78 00000050 E59F110C        ldr              r1,=IO0DIR
   79 00000054 E3A02826        ldr              r2,=0x00260000 ;select P0.21 P0
                                                            .18 P0.17
   80 00000058 E5812000        str              r2,[r1]     ;make them outputs
   81 0000005C E59F1104        ldr              r1,=IO0SET
   82 00000060 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   83 00000064 E59F2100        ldr              r2,=IO0CLR
   84 00000068         ; r1 points to the SET register
   85 00000068         ; r2 points to the CLEAR register
   86 00000068         
   87 00000068         ;P0.17 RED  0x00020000
   88 00000068         ;P0.18 BLUE 0x00040000
   89 00000068         ;P0.21 GREEN 0x00200000 
   90 00000068         
   91 00000068         ;red -> 0x00020000    - 0000 0010
   92 00000068         ;blue -> 0x00040000   - 0000 0100
   93 00000068         ;purple -> 0x00060000  - 0000 0110
   94 00000068         ;green -> 0x00200000   - 1 ---- 0000
   95 00000068         ;yellow -> 0x00220000  - 1 ---- 0010
   96 00000068         ;light blue -> 0x00240000   - 1 ---- 0100
   97 00000068         ;white -> 0x00260000  - 1 ---- 0110
   98 00000068         ;black/clear -> 0x00000000  - 0000 0000
   99 00000068         ;00,02,04,06,20,22,24
  100 00000068         
  101 00000068         wloop
  102 00000068 E59F6100        LDR              R6,=estimate1sec ;
  103 0000006C E5967000        LDR              R7,[R6]     ;
  104 00000070         waiting
  105 00000070         ;800 * 1/1600 = 0.5s 
  106 00000070 E3570E32        CMP              R7,#0x320   ;
  107 00000074 0A00000E        BEQ              redLED      ;
  108 00000078 E3570D19        CMP              R7,#0x640   ;
  109 0000007C 0A000011        BEQ              blueLED     ;
  110 00000080 E3570E96        CMP              R7,#0x960   ;
  111 00000084 0A000014        BEQ              purpleLED   ;
  112 00000088 E3570EC2        CMP              R7,#0xC20   ;
  113 0000008C 0A000017        BEQ              greenLED    ;
  114 00000090 E3570EFA        CMP              R7,#0xFA0   ;
  115 00000094 0A00001A        BEQ              yellowLED   ;
  116 00000098 E3570D4B        CMP              R7,#0x12C0  ;
  117 0000009C 0A00001D        BEQ              lightBlueLED ;



ARM Macro Assembler    Page 4 


  118 000000A0 E3570C16        CMP              R7,#0x1600  ;
  119 000000A4 0A000020        BEQ              whiteLED    ;
  120 000000A8 E3570C19        CMP              R7,#0x1900  ;
  121 000000AC 0A000023        BEQ              clearLED    ;
  122 000000B0         
  123 000000B0 EAFFFFEC        B                wloop       ;
  124 000000B4         
  125 000000B4         redLED
  126 000000B4 E3A05602        LDR              R5,=0X00200000 ;GREEN
  127 000000B8 E5815000        STR              R5,[R1]     ;
  128 000000BC E3A03802        LDR              R3,=0x00020000 ;RED
  129 000000C0 E5823000        STR              R3,[R2]     ;
  130 000000C4 EAFFFFE7        b                wloop
  131 000000C8         
  132 000000C8         blueLED
  133 000000C8 E3A03802        LDR              R3,=0x00020000 ;RED
  134 000000CC E5813000        STR              R3,[R1]     ;
  135 000000D0 E3A04701        LDR              R4,=0X00040000 ;BLUE
  136 000000D4 E5824000        STR              R4,[R2]     ;
  137 000000D8 EAFFFFE2        B                wloop
  138 000000DC         
  139 000000DC         purpleLED
  140 000000DC E3A03701        LDR              R3,=0X00040000 ;BLUE
  141 000000E0 E5813000        STR              R3,[R1]     ;
  142 000000E4 E3A04806        LDR              R4,=0X00060000 ;PURPLE
  143 000000E8 E5824000        STR              R4,[R2]     ;
  144 000000EC EAFFFFDD        B                wloop
  145 000000F0         
  146 000000F0         greenLED
  147 000000F0 E3A04806        LDR              R4,=0X00060000 ;BLUE
  148 000000F4 E5814000        STR              R4,[R1]     ;
  149 000000F8 E3A05602        LDR              R5,=0X00200000 ;GREEN
  150 000000FC E5825000        STR              R5,[R2]     ;
  151 00000100 EAFFFFD8        B                wloop
  152 00000104         
  153 00000104         yellowLED                            ;
  154 00000104 E3A04602        LDR              R4,=0X00200000 ;BLUE
  155 00000108 E5814000        STR              R4,[R1]     ;
  156 0000010C E3A05822        LDR              R5,=0x00220000 ;GREEN
  157 00000110 E5825000        STR              R5,[R2]     ;
  158 00000114 EAFFFFD3        B                wloop
  159 00000118         
  160 00000118         lightBlueLED                         ;
  161 00000118 E3A04822        LDR              R4,=0x00220000 ;BLUE
  162 0000011C E5814000        STR              R4,[R1]     ;
  163 00000120 E3A05709        LDR              R5,=0x00240000 ;GREEN
  164 00000124 E5825000        STR              R5,[R2]     ;
  165 00000128 EAFFFFCE        B                wloop
  166 0000012C         
  167 0000012C         whiteLED                             ;
  168 0000012C E3A04709        LDR              R4,=0x00240000 ;BLUE
  169 00000130 E5814000        STR              R4,[R1]     ;
  170 00000134 E3A05826        LDR              R5,=0x00260000 ;GREEN
  171 00000138 E5825000        STR              R5,[R2]     ;
  172 0000013C EAFFFFC9        B                wloop
  173 00000140         
  174 00000140         clearLED
  175 00000140 E3A04826        LDR              R4,=0x00260000 ;BLUE
  176 00000144 E5814000        STR              R4,[R1]     ;



ARM Macro Assembler    Page 5 


  177 00000148 E3A07000        LDR              R7,=0       ;
  178 0000014C E5867000        STR              R7,[R6]     ;
  179 00000150 EAFFFFC4        b                wloop       ; branch always
  180 00000154         
  181 00000154         ;main program execution will never drop below the statem
                       ent above.
  182 00000154         
  183 00000154 FFFFF000 
              00000000 
              E0004000 
              000023FF 
              E0028008 
              E0028004 
              E002800C 
              00000000         AREA             InterruptStuff, CODE, READONLY
  184 00000000         irqhan
  185 00000000 E24EE004        sub              lr,lr,#4
  186 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
  187 00000008         
  188 00000008         ;this is the body of the interrupt handler
  189 00000008         
  190 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  191 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  192 00000008 E59F0024        LDR              R0,=estimate1sec ;
  193 0000000C         
  194 0000000C         ;9215875
  195 0000000C E5901000        LDR              R1,[R0]     ;
  196 00000010 E2811001        ADD              R1,R1,#1    ;
  197 00000014 E5801000        STR              R1,[R0]     ;
  198 00000018         
  199 00000018         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  200 00000018         ;i.e. we 'acknowledge' the interrupt
  201 00000018 E59F0018        ldr              r0,=T0
  202 0000001C E3A01001        mov              r1,#TimerResetTimer0Interrupt
  203 00000020 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  204 00000024         
  205 00000024         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  206 00000024 E59F0010        ldr              r0,=VIC
  207 00000028 E3A01000        mov              r1,#0
  208 0000002C E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  209 00000030         
  210 00000030 E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  211 00000034         ; and also restoring the CPSR
  212 00000034         
  213 00000034 00000000 
              E0004000 
              FFFFF000         AREA             Output,DATA,READWRITE
  214 00000000 00000000 
                       estimate1sec



ARM Macro Assembler    Page 6 


                               DCD              0           ;
  215 00000004         
  216 00000004                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 32 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
blueLED 000000C8

Symbol: blueLED
   Definitions
      At line 132 in file App.s
   Uses
      At line 109 in file App.s
Comment: blueLED used once
clearLED 00000140

Symbol: clearLED
   Definitions
      At line 174 in file App.s
   Uses
      At line 121 in file App.s
Comment: clearLED used once
greenLED 000000F0

Symbol: greenLED
   Definitions
      At line 146 in file App.s
   Uses
      At line 113 in file App.s
Comment: greenLED used once
lightBlueLED 00000118

Symbol: lightBlueLED
   Definitions
      At line 160 in file App.s
   Uses
      At line 117 in file App.s
Comment: lightBlueLED used once
purpleLED 000000DC

Symbol: purpleLED
   Definitions
      At line 139 in file App.s
   Uses
      At line 111 in file App.s
Comment: purpleLED used once
redLED 000000B4

Symbol: redLED
   Definitions
      At line 125 in file App.s
   Uses
      At line 107 in file App.s
Comment: redLED used once
start 00000000

Symbol: start



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 38 in file App.s
   Uses
      At line 37 in file App.s
Comment: start used once
waiting 00000070

Symbol: waiting
   Definitions
      At line 104 in file App.s
   Uses
      None
Comment: waiting unused
whiteLED 0000012C

Symbol: whiteLED
   Definitions
      At line 167 in file App.s
   Uses
      At line 119 in file App.s
Comment: whiteLED used once
wloop 00000068

Symbol: wloop
   Definitions
      At line 101 in file App.s
   Uses
      At line 123 in file App.s
      At line 130 in file App.s
      At line 137 in file App.s
      At line 144 in file App.s
      At line 151 in file App.s
      At line 158 in file App.s
      At line 165 in file App.s
      At line 172 in file App.s
      At line 179 in file App.s

yellowLED 00000104

Symbol: yellowLED
   Definitions
      At line 153 in file App.s
   Uses
      At line 115 in file App.s
Comment: yellowLED used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 183 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 184 in file App.s
   Uses
      At line 44 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Output 00000000

Symbol: Output
   Definitions
      At line 213 in file App.s
   Uses
      None
Comment: Output unused
estimate1sec 00000000

Symbol: estimate1sec
   Definitions
      At line 214 in file App.s
   Uses
      At line 102 in file App.s
      At line 192 in file App.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 6 in file App.s
   Uses
      At line 83 in file App.s
Comment: IO0CLR used once
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 4 in file App.s
   Uses
      At line 78 in file App.s
Comment: IO0DIR used once
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 5 in file App.s
   Uses
      At line 81 in file App.s
Comment: IO0SET used once
IR 00000000

Symbol: IR
   Definitions
      At line 10 in file App.s
   Uses
      At line 63 in file App.s
      At line 203 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 30 in file App.s
   Uses
      At line 47 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 23 in file App.s
   Uses
      At line 51 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 12 in file App.s
   Uses
      At line 70 in file App.s
Comment: MCR used once
MR0 00000018




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: MR0
   Definitions
      At line 13 in file App.s
   Uses
      At line 67 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 7 in file App.s
   Uses
      At line 57 in file App.s
      At line 201 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 8 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 11 in file App.s
   Uses
      At line 60 in file App.s
      At line 73 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 28 in file App.s
   Uses
      At line 29 in file App.s
      At line 47 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 29 in file App.s
   Uses
      At line 50 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 15 in file App.s
   Uses
      At line 59 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: TimerCommandRun
   Definitions
      At line 16 in file App.s
   Uses
      At line 72 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 17 in file App.s
   Uses
      At line 69 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 19 in file App.s
   Uses
      At line 62 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 18 in file App.s
   Uses
      At line 202 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 22 in file App.s
   Uses
      At line 42 in file App.s
      At line 206 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 24 in file App.s
   Uses
      At line 54 in file App.s
      At line 208 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 25 in file App.s
   Uses
      At line 45 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 26 in file App.s
   Uses
      At line 48 in file App.s
Comment: VectCtrl0 used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: main unused
1 symbol
376 symbols in table
